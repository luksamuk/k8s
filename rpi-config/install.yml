- name: Enable cgroups
  become: true
  hosts: rpis
  tasks:
    - name: Check connectivity with all nodes
      ansible.builtin.ping:
    - name: Check if cgroups are enabled
      command: cat /boot/cmdline.txt
      register: cmdlineContent
    - name: Enable cgroups
      command: sed -i -e 's/$/ cgroup_memory=1 cgroup_enable=memory/' /boot/cmdline.txt
      when: "'cgroup_memory=1 cgroup_enable=memory' not in cmdlineContent.stdout"
      notify:
        - Restart Node
  handlers:
    - name: Restart Node
      ansible.builtin.reboot:

- name: Install Master
  become: true
  hosts: rpi4-master
  tasks:
    - name: Check connectivity with master node
      ansible.builtin.ping:
    - name: Install k3s master
      shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_NODE_NAME={{ inventory_hostname }} K3S_KUBECONFIG_MODE="644" sh -s - server --cluster-init
    - name: Extract K3S_TOKEN
      command: cat /var/lib/rancher/k3s/server/token
      register: k3s_token
      failed_when: k3s_token is failed or k3s_token.stdout is undefined
    - name: Set K3S_TOKEN as a fact
      set_fact:
        k3s_token: "{{ k3s_token.stdout }}"

- name: Install Workers
  become: true
  hosts: workers
  tasks:
    - name: Check connectivity with worker nodes
      ansible.builtin.ping:
    - name: Install k3s worker
      shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} K3S_URL=https://{{ hostvars['rpi4-master']['ansible_default_ipv4'].address }}:6443 K3S_TOKEN={{ hostvars['rpi4-master']['k3s_token'] }} K3S_NODE_NAME={{ inventory_hostname }} sh -

- name: Copy Kubeconfig from Master
  become: true
  hosts: rpi4-master
  tasks:
    - name: Fetch Kubeconfig
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: kubeconfig.yml
        flat: true

