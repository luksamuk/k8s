---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins-admin-cr
  namespace: devtools
rules:
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-admin-sa
  namespace: devtools
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-admin-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins-admin-cr
subjects:
  - kind: ServiceAccount
    name: jenkins-admin-sa
    namespace: devtools
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: devtools
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: devtools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-server
  template:
    metadata:
      labels:
        app: jenkins-server
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: jenkins-admin-sa
      containers:
        - name: jenkins-container
          image: jenkins/jenkins:lts-jdk11
          resources:
            limits:
              memory: "1Gi"
              cpu: "1000m"
            requests:
              memory: "500Mi"
              cpu: "500m"
          ports:
            - name: http
              containerPort: 8080
            - name: jnlp
              containerPort: 50000
          # livenessProbe:
          #   httpGet:
          #     path: "/login"
          #     port: 8080
          #   initialDelaySeconds: 90
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 5
          # readinessProbe:
          #   httpGet:
          #     path: "/login"
          #     port: 8080
          #   initialDelaySeconds: 60
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 3
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
  namespace: devtools
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: /
    prometheus.io/port: '8080'
spec:
  selector:
    app: jenkins-server
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30300
